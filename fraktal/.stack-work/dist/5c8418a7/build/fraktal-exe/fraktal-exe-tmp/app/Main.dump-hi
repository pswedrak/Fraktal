
==================== FINAL INTERFACE ====================
2018-01-24 18:38:26.2572068 UTC

interface main:Main 8022
  interface hash: 4fe9ce21b8b474c19044eba23448ceb3
  ABI hash: f45fb0f4b2b2d72262511c382d7d3feb
  export-list hash: 2a1831c1d8d4db7f379fffb56c8247fa
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 9ac8298f28d776fc15accd992502ec04
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: GLURaw-2.0.0.3 GLUT-2.7.0.12
                      ObjectName-1.1.0.1 OpenGL-3.0.2.0 OpenGLRaw-3.2.7.0
                      StateVar-1.1.0.4 array-0.5.2.0 base-4.10.1.0 binary-0.8.5.1
                      bmp-1.2.6.3 bytestring-0.10.8.2 containers-0.5.10.2 deepseq-1.4.3.0
                      fixed-0.2.1.1 fraktal-0.1.0.0 ghc-prim-0.5.1.1 gloss-1.11.1.1
                      gloss-rendering-1.11.1.1 half-0.2.2.3 integer-gmp-1.0.1.0
                      stm-2.4.4.1 text-1.2.2.2
orphans: gloss-rendering-1.11.1.1:Graphics.Gloss.Internals.Data.Picture
         stm-2.4.4.1:Control.Monad.STM text-1.2.2.2:Data.Text
         binary-0.8.5.1:Data.Binary.Generic text-1.2.2.2:Data.Text.Show
         bytestring-0.10.8.2:Data.ByteString.Builder base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats containers-0.5.10.2:Data.IntMap.Internal
                         containers-0.5.10.2:Data.IntSet.Internal
                         containers-0.5.10.2:Data.Map.Internal
                         containers-0.5.10.2:Data.Sequence.Internal
                         containers-0.5.10.2:Data.Set.Internal containers-0.5.10.2:Data.Tree
                         text-1.2.2.2:Data.Text
import  -/  base-4.10.1.0:Prelude a93a9400cc0c816c2ee5f39399baa7a0
import  -/  base-4.10.1.0:System.IO 1fb8f1d116df69c8750950ac088a90e6
import  -/  base-4.10.1.0:Text.Read c150617dda21a009ed26981626bd21d7
import  -/  fraktal-0.1.0.0:DrawFractal d48714a818207f3c261dfbaaeeb080fa
import  -/  fraktal-0.1.0.0:GeneratePoints f896f8123eb5210d21aec5e3dbac18ae
import  -/  fraktal-0.1.0.0:GenerateString 5e48eab80b73ee448c5b6d44709bb4a3
import  -/  ghc-prim-0.5.1.1:GHC.Types b1fd0716441595db508c1a74387bf394
import  -/  gloss-1.11.1.1:Graphics.Gloss cb068117ff81ac607d6a68ef8bf834c7
import  -/  integer-gmp-1.0.1.0:GHC.Integer.Type b5281b57ea091e60b176ffa6bef118fd
9d72b2fddb818bcd8919052935e0f1f3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
3108ceeaf5a318be844de422b45de9d8
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
33bd129667974f0a0ba4a893af79107d
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
fc8fd3118f38cf08249a720c404d7911
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
9a1500c1cdbcbcaa1e275bdb3ba4d8e3
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main15
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main13
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main11
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main9
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R))
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 DrawFractal.drawFractal1
                   @ GHC.Types.Double
                   @ GHC.Types.Double
                   GHC.Float.$fRealDouble
                   GHC.Float.$fRealDouble
                   (case Text.Read.readEither8
                           @ GHC.Integer.Type.Integer
                           (Text.ParserCombinators.ReadP.run
                              @ GHC.Integer.Type.Integer
                              Main.main8
                              ipv11) of wild {
                      []
                      -> case Main.main7
                         ret_ty [(GHC.Types.Double, GHC.Types.Double)]
                         of {}
                      : x ds
                      -> case ds of wild1 {
                           []
                           -> GeneratePoints.$wgeneratePoints
                                Main.main6
                                Main.main6
                                Main.main6
                                (GenerateString.generateFull ipv3 x ipv7)
                                (case Text.Read.readEither8
                                        @ GHC.Types.Double
                                        (Text.ParserCombinators.ReadP.run
                                           @ GHC.Types.Double
                                           Main.main5
                                           ipv15) of wild2 {
                                   [] -> Main.main4
                                   : x1 ds9
                                   -> case ds9 of wild3 { [] -> x1 : ipv16 ipv17 -> Main.main3 } })
                           : ipv16 ipv17
                           -> case Main.main2
                              ret_ty [(GHC.Types.Double, GHC.Types.Double)]
                              of {} } })
                   ipv14 } } } } } } } }) -}
0c90877bb64b3c9ed006115af7d8c046
  main10 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Length: "#) -}
d29855ba9f58fc12c227d802f170cb2d
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main12) -}
f7d6b8835c0cb808a64fb14f089f994a
  main12 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Iterations : "#) -}
3fc8fd537aeaaa076ad0b79bef2187b6
  main13 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main14) -}
780daf9c1c2f207a3a2a2243aa579008
  main14 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Second string: "#) -}
e0222089a11666620b47db88a55f9ebd
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main16) -}
39fda32f79a3728415b511150a87b47a
  main16 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("First string: "#) -}
19ccfbf6610cdf78828f93ef72fc2d92
  main17 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
ad5e5736f388be2b27205fa5d5cf1c57
  main2 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
eee738e7a04b4dba89f480948580ca8d
  main3 :: GHC.Types.Double
  {- Strictness: x -}
cb20bd8f60a5a785f67bedfd1841d6d3
  main4 :: GHC.Types.Double
  {- Strictness: x -}
407eb5b35e49bbc81c59b3f5a3a721b0
  main5 :: Text.ParserCombinators.ReadP.P GHC.Types.Double
  {- Unfolding: (GHC.Read.$fReadDouble_$sreadNumber
                   GHC.Read.$fReadDouble_$sconvertFrac
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Types.Double
                   (Text.Read.readEither7 @ GHC.Types.Double)) -}
12ae35a1f884c1cadde3b48d5231032b
  main6 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
3021aebed5be2fbd6bdde19098e8abac
  main7 :: GHC.Integer.Type.Integer
  {- Strictness: x -}
0ba50abd4effc6bd6ccc3847409ed332
  main8 :: Text.ParserCombinators.ReadP.P GHC.Integer.Type.Integer
  {- Unfolding: (GHC.Read.$fReadInteger_$sreadNumber
                   GHC.Read.$fReadInteger2
                   Text.ParserCombinators.ReadPrec.minPrec
                   @ GHC.Integer.Type.Integer
                   (Text.Read.readEither7 @ GHC.Integer.Type.Integer)) -}
88aa68a60a633f412dc346e78afa7fca
  main9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# Main.main10) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

