-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Automatically discover and run Hspec tests
--   
--   Automatically discover and run Hspec tests
--   
--   <a>http://hspec.github.io/hspec-discover.html</a>
@package hspec-discover
@version 2.4.4


-- | <i>NOTE:</i> This module is not meant for public consumption. For user
--   documentation look at
--   <a>http://hspec.github.io/hspec-discover.html</a>.
module Test.Hspec.Discover.Config
data Config
Config :: Bool -> Maybe String -> Bool -> Maybe String -> Config
[configNested] :: Config -> Bool
[configFormatter] :: Config -> Maybe String
[configNoMain] :: Config -> Bool
[configModuleName] :: Config -> Maybe String
defaultConfig :: Config
parseConfig :: String -> [String] -> Either String Config
usage :: String -> String
instance GHC.Show.Show Test.Hspec.Discover.Config.Config
instance GHC.Classes.Eq Test.Hspec.Discover.Config.Config


-- | A preprocessor that finds and combines specs.
--   
--   <i>NOTE:</i> This module is not meant for public consumption. For user
--   documentation look at
--   <a>http://hspec.github.io/hspec-discover.html</a>.
module Test.Hspec.Discover.Run
run :: [String] -> IO ()
data Spec
Spec :: FilePath -> String -> Spec
[specFile] :: Spec -> FilePath
[specModule] :: Spec -> String

-- | Generate imports for a list of specs.
importList :: [Spec] -> ShowS
fileToSpec :: FilePath -> FilePath -> Maybe Spec
findSpecs :: FilePath -> IO [Spec]
getFilesRecursive :: FilePath -> IO [FilePath]
driverWithFormatter :: String -> ShowS

-- | Return module name of a fully qualified identifier.
moduleNameFromId :: String -> String

-- | Derive module name from specified path.
pathToModule :: FilePath -> String
instance GHC.Show.Show Test.Hspec.Discover.Run.Spec
instance GHC.Classes.Eq Test.Hspec.Discover.Run.Spec
instance Data.String.IsString GHC.Show.ShowS
